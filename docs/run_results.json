{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.2", "generated_at": "2025-03-05T06:11:48.769000Z", "invocation_id": "f33fc22b-9540-487c-a1b6-51f20ba81152", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-05T06:11:48.314267Z", "completed_at": "2025-03-05T06:11:48.325311Z"}, {"name": "execute", "started_at": "2025-03-05T06:11:48.325586Z", "completed_at": "2025-03-05T06:11:48.325602Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012717962265014648, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.insurance_analytics_demo.claims_transformed", "compiled": true, "compiled_code": "WITH base AS (\n    SELECT \n        claim_id,\n        member_id,\n        service_date,\n        provider,\n        service_code,\n        amount_billed,\n        amount_paid,\n        (amount_billed - amount_paid) as member_out_of_pocket,\n        CASE \n            WHEN status = 'Paid' THEN 'Completed'\n            WHEN status = 'Pending' THEN 'In Progress'\n            ELSE 'Rejected'\n        END AS claim_status\n    FROM `bq-dbt-omni-demo.insurance_analytics_demo.claims_raw`\n)\n\nSELECT * FROM base", "relation_name": "`bq-dbt-omni-demo`.`insurance_analytics_demo`.`claims_transformed`", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-05T06:11:48.329853Z", "completed_at": "2025-03-05T06:11:48.356527Z"}, {"name": "execute", "started_at": "2025-03-05T06:11:48.356912Z", "completed_at": "2025-03-05T06:11:48.356918Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02972102165222168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.insurance_analytics_demo.accepted_values_claims_transformed_claim_status__Completed__In_Progress__Rejected.46e64dcc94", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        claim_status as value_field,\n        count(*) as n_records\n\n    from `bq-dbt-omni-demo`.`insurance_analytics_demo`.`claims_transformed`\n    group by claim_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Completed','In Progress','Rejected'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-05T06:11:48.339063Z", "completed_at": "2025-03-05T06:11:48.357073Z"}, {"name": "execute", "started_at": "2025-03-05T06:11:48.357754Z", "completed_at": "2025-03-05T06:11:48.357757Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029743194580078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.insurance_analytics_demo.dbt_expectations_expect_column_values_to_be_between_claims_transformed_service_date__DATE_CURRENT_DATE___DATE_1900_01_01_.0b1189dc15", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and service_date >= DATE '1900-01-01' and service_date <= DATE(CURRENT_DATE())\n)\n as expression\n\n\n    from `bq-dbt-omni-demo`.`insurance_analytics_demo`.`claims_transformed`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-05T06:11:48.348975Z", "completed_at": "2025-03-05T06:11:48.697970Z"}, {"name": "execute", "started_at": "2025-03-05T06:11:48.698349Z", "completed_at": "2025-03-05T06:11:48.698361Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.3695838451385498, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.insurance_analytics_demo.dbt_expectations_expect_column_values_to_be_of_type_claims_transformed_amount_billed__FLOAT64.ef65eabb52", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as string) as relation_column,\n            cast('INT64' as string) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as string) as relation_column,\n            cast('STRING' as string) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_DATE' as string) as relation_column,\n            cast('DATE' as string) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER' as string) as relation_column,\n            cast('STRING' as string) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_CODE' as string) as relation_column,\n            cast('STRING' as string) as relation_column_type\n        union all\n        \n        select\n            cast('AMOUNT_BILLED' as string) as relation_column,\n            cast('FLOAT64' as string) as relation_column_type\n        union all\n        \n        select\n            cast('AMOUNT_PAID' as string) as relation_column,\n            cast('FLOAT64' as string) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_OUT_OF_POCKET' as string) as relation_column,\n            cast('FLOAT64' as string) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_STATUS' as string) as relation_column,\n            cast('STRING' as string) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'AMOUNT_BILLED'\n            and\n            relation_column_type not in ('FLOAT64')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-05T06:11:48.353765Z", "completed_at": "2025-03-05T06:11:48.711713Z"}, {"name": "execute", "started_at": "2025-03-05T06:11:48.711972Z", "completed_at": "2025-03-05T06:11:48.711978Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3832359313964844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.insurance_analytics_demo.dbt_expectations_expect_column_values_to_be_of_type_claims_transformed_amount_paid__FLOAT64.f20c0a622e", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as string) as relation_column,\n            cast('INT64' as string) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as string) as relation_column,\n            cast('STRING' as string) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_DATE' as string) as relation_column,\n            cast('DATE' as string) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER' as string) as relation_column,\n            cast('STRING' as string) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_CODE' as string) as relation_column,\n            cast('STRING' as string) as relation_column_type\n        union all\n        \n        select\n            cast('AMOUNT_BILLED' as string) as relation_column,\n            cast('FLOAT64' as string) as relation_column_type\n        union all\n        \n        select\n            cast('AMOUNT_PAID' as string) as relation_column,\n            cast('FLOAT64' as string) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_OUT_OF_POCKET' as string) as relation_column,\n            cast('FLOAT64' as string) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_STATUS' as string) as relation_column,\n            cast('STRING' as string) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'AMOUNT_PAID'\n            and\n            relation_column_type not in ('FLOAT64')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-05T06:11:48.700434Z", "completed_at": "2025-03-05T06:11:48.712055Z"}, {"name": "execute", "started_at": "2025-03-05T06:11:48.712326Z", "completed_at": "2025-03-05T06:11:48.712332Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.013421058654785156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.insurance_analytics_demo.not_null_claims_transformed_claim_id.8f61974a83", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect claim_id\nfrom `bq-dbt-omni-demo`.`insurance_analytics_demo`.`claims_transformed`\nwhere claim_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-05T06:11:48.714762Z", "completed_at": "2025-03-05T06:11:48.720045Z"}, {"name": "execute", "started_at": "2025-03-05T06:11:48.720230Z", "completed_at": "2025-03-05T06:11:48.720234Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006636142730712891, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.insurance_analytics_demo.not_null_claims_transformed_member_id.453d8a48f3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect member_id\nfrom `bq-dbt-omni-demo`.`insurance_analytics_demo`.`claims_transformed`\nwhere member_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-05T06:11:48.717574Z", "completed_at": "2025-03-05T06:11:48.721007Z"}, {"name": "execute", "started_at": "2025-03-05T06:11:48.721384Z", "completed_at": "2025-03-05T06:11:48.721388Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.007847070693969727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.insurance_analytics_demo.not_null_claims_transformed_service_date.051b42c0f1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect service_date\nfrom `bq-dbt-omni-demo`.`insurance_analytics_demo`.`claims_transformed`\nwhere service_date is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-05T06:11:48.722255Z", "completed_at": "2025-03-05T06:11:48.725937Z"}, {"name": "execute", "started_at": "2025-03-05T06:11:48.726108Z", "completed_at": "2025-03-05T06:11:48.726111Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005203962326049805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.insurance_analytics_demo.unique_claims_transformed_claim_id.f16d2a394c", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select claim_id as unique_field\n  from `bq-dbt-omni-demo`.`insurance_analytics_demo`.`claims_transformed`\n  where claim_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-05T06:11:48.361483Z", "completed_at": "2025-03-05T06:11:48.766452Z"}, {"name": "execute", "started_at": "2025-03-05T06:11:48.766893Z", "completed_at": "2025-03-05T06:11:48.766898Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.4080977439880371, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.insurance_analytics_demo.dbt_expectations_expect_column_values_to_be_of_type_claims_transformed_service_date__DATE.41d17f2e63", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as string) as relation_column,\n            cast('INT64' as string) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as string) as relation_column,\n            cast('STRING' as string) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_DATE' as string) as relation_column,\n            cast('DATE' as string) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER' as string) as relation_column,\n            cast('STRING' as string) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_CODE' as string) as relation_column,\n            cast('STRING' as string) as relation_column_type\n        union all\n        \n        select\n            cast('AMOUNT_BILLED' as string) as relation_column,\n            cast('FLOAT64' as string) as relation_column_type\n        union all\n        \n        select\n            cast('AMOUNT_PAID' as string) as relation_column,\n            cast('FLOAT64' as string) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_OUT_OF_POCKET' as string) as relation_column,\n            cast('FLOAT64' as string) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_STATUS' as string) as relation_column,\n            cast('STRING' as string) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'SERVICE_DATE'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-05T06:11:48.359219Z", "completed_at": "2025-03-05T06:11:48.766673Z"}, {"name": "execute", "started_at": "2025-03-05T06:11:48.766989Z", "completed_at": "2025-03-05T06:11:48.766993Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.4090158939361572, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.insurance_analytics_demo.dbt_expectations_expect_column_values_to_be_of_type_claims_transformed_member_out_of_pocket__FLOAT64.39afeeb8e5", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('CLAIM_ID' as string) as relation_column,\n            cast('INT64' as string) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_ID' as string) as relation_column,\n            cast('STRING' as string) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_DATE' as string) as relation_column,\n            cast('DATE' as string) as relation_column_type\n        union all\n        \n        select\n            cast('PROVIDER' as string) as relation_column,\n            cast('STRING' as string) as relation_column_type\n        union all\n        \n        select\n            cast('SERVICE_CODE' as string) as relation_column,\n            cast('STRING' as string) as relation_column_type\n        union all\n        \n        select\n            cast('AMOUNT_BILLED' as string) as relation_column,\n            cast('FLOAT64' as string) as relation_column_type\n        union all\n        \n        select\n            cast('AMOUNT_PAID' as string) as relation_column,\n            cast('FLOAT64' as string) as relation_column_type\n        union all\n        \n        select\n            cast('MEMBER_OUT_OF_POCKET' as string) as relation_column,\n            cast('FLOAT64' as string) as relation_column_type\n        union all\n        \n        select\n            cast('CLAIM_STATUS' as string) as relation_column,\n            cast('STRING' as string) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'MEMBER_OUT_OF_POCKET'\n            and\n            relation_column_type not in ('FLOAT64')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}], "elapsed_time": 1.1648261547088623, "args": {"partial_parse": true, "partial_parse_file_diff": true, "require_resource_names_without_spaces": false, "macro_debugging": false, "empty_catalog": false, "introspect": true, "source_freshness_run_project_hooks": false, "indirect_selection": "eager", "send_anonymous_usage_stats": true, "use_colors_file": true, "vars": {}, "select": [], "which": "generate", "log_path": "/Users/dougthomas/Projects/ncd/bq-dbt-omni-demo/insurance_analytics_project/logs", "log_format": "default", "compile": true, "exclude": [], "print": true, "profiles_dir": "/Users/dougthomas/.dbt", "show_resource_report": false, "static": false, "populate_cache": true, "invocation_command": "dbt docs generate", "log_format_file": "debug", "require_batched_execution_for_custom_microbatch_strategy": false, "state_modified_compare_more_unrendered_values": false, "state_modified_compare_vars": false, "log_level": "info", "use_colors": true, "printer_width": 80, "require_nested_cumulative_type_params": false, "require_explicit_package_overrides_for_builtin_materializations": true, "log_level_file": "debug", "cache_selected_only": false, "defer": false, "require_yaml_configuration_for_mf_time_spines": false, "static_parser": true, "log_file_max_bytes": 10485760, "version_check": true, "write_json": true, "project_dir": "/Users/dougthomas/Projects/ncd/bq-dbt-omni-demo/insurance_analytics_project", "favor_state": false, "skip_nodes_if_on_run_start_fails": false, "warn_error_options": {"include": [], "exclude": []}, "strict_mode": false, "quiet": false}}